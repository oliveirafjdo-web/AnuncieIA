import { NextResponse } from "next/server";

export async function POST(req: Request) {
  const { nome, carac, tipo } = await req.json();
  // Mock de IA local (substituir por chamada a provider de IA)
  const caracts = String(carac || '').split(';').map((s)=>s.trim()).filter(Boolean);
  const baseTitulo = `${nome} ‚Äî ${caracts.slice(0,2).join(' ‚Ä¢ ')}`.slice(0, 60);

  const descricao = [
    `üîπ ${nome}`,
    ``,
    `Benef√≠cios:`,
    ...caracts.map((c)=>`‚Ä¢ ${c}`),
    ``,
    `Por que escolher?`,
    `‚Ä¢ Estabilidade e velocidade superiores para sua rotina de trabalho e lazer.`,
    `‚Ä¢ Instala√ß√£o simples: Plug & Play.`,
    `‚Ä¢ Suporte Redutron com garantia e atendimento r√°pido.`,
  ].join('\n');

  const obj = [
    `‚ùì Vai funcionar no meu notebook?`,
    `‚úÖ Sim. Basta ter porta USB dispon√≠vel e sistema compat√≠vel.`,
    ``,
    `‚ùì Precisa de driver?`,
    `‚úÖ √â plug & play; se necess√°rio, o driver acompanha e √© simples de instalar.`,
    ``,
    `‚ùì Serve para jogos e streaming?`,
    `‚úÖ Sim, a estabilidade e a velocidade s√£o ideais para essas atividades.`,
  ].join('\n');

  const tags = ['usb 3.0','dual band','wifi 5','adaptador','alta velocidade','plug & play','windows','mac'].join(', ');

  const out: any = {};
  if (!tipo || tipo === 'titulo') out.titulo = baseTitulo;
  if (!tipo || tipo === 'descricao') out.descricao = descricao;
  if (!tipo || tipo === 'obje√ß√µes') out.obje√ß√µes = obj;
  out.tags = tags;

  return NextResponse.json(out);
}
